name: Build Dictionaries (Matrix)

on:
  workflow_dispatch: # Allow manual triggering
  schedule:
    - cron: "0 0 1 * *" # Run monthly

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.21"
          
      - name: Download JMdict files
        run: |
          mkdir -p dictionaries/jmdict/source
          curl -L -o dictionaries/jmdict/source/jmdict-examples-eng-3.6.1.json https://github.com/scriptin/jmdict-simplified/releases/download/3.6.1/jmdict-examples-eng-3.6.1.json
          
      - name: Download JMnedict files
        run: |
          mkdir -p dictionaries/jmnedict/source
          curl -L -o dictionaries/jmnedict/source/jmnedict-all-3.6.1.json https://github.com/scriptin/jmdict-simplified/releases/download/3.6.1/jmnedict-all-3.6.1.json
          
      - name: Download Kanjidic files
        run: |
          mkdir -p dictionaries/kanjidic/source
          curl -L -o dictionaries/kanjidic/source/kanjidic2-en-3.6.1.json https://github.com/scriptin/jmdict-simplified/releases/download/3.6.1/kanjidic2-en-3.6.1.json
          
      - name: Download Chinese dictionary files
        run: |
          mkdir -p dictionaries/chinese_chars/source
          mkdir -p dictionaries/chinese_words/source
          
          # Download Chinese character dictionary
          curl -L -o dictionaries/chinese_chars/source/dictionary_char_2024-06-17.jsonl https://data.dong-chinese.com/dictionary_char_2024-06-17.jsonl
          
          # Download Chinese word dictionary
          curl -L -o dictionaries/chinese_words/source/dictionary_word_2024-06-17.jsonl https://data.dong-chinese.com/dictionary_word_2024-06-17.jsonl
          
          # Convert JSONL to JSON
          go run cmd/jsonl2json/main.go dictionaries/chinese_chars/source/dictionary_char_2024-06-17.jsonl dictionaries/chinese_chars/source/dictionary_char_2024-06-17.json
          go run cmd/jsonl2json/main.go dictionaries/chinese_words/source/dictionary_word_2024-06-17.jsonl dictionaries/chinese_words/source/dictionary_word_2024-06-17.json
          
          # Debug: Check if the files exist
          echo "Checking if Chinese dictionary files exist..."
          ls -la dictionaries/chinese_chars/source/
          ls -la dictionaries/chinese_words/source/
          
      - name: Cache dictionary files
        uses: actions/cache@v3
        with:
          path: |
            dictionaries/jmdict/source/
            dictionaries/jmnedict/source/
            dictionaries/kanjidic/source/
            dictionaries/chinese_chars/source/
            dictionaries/chinese_words/source/
          key: ${{ runner.os }}-dictionary-files-${{ github.sha }}
    
  build:
    needs: prepare
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        shard-type: [non-han, han-1char, han-2char, han-3plus]
      # This ensures all builds run even if one fails
      fail-fast: false
    
    env:
      # Set the output repo based on the matrix value
      OUTPUT_REPO: ${{ format('Kimeiga/japanese-dict-{0}', matrix.shard-type) }}
    
    steps:
      # Common setup steps
      - name: Checkout source code
        uses: actions/checkout@v3
        
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.21"
          
      # Restore cached dictionary files
      - name: Restore cached dictionary files
        uses: actions/cache@v3
        with:
          path: |
            dictionaries/jmdict/source/
            dictionaries/jmnedict/source/
            dictionaries/kanjidic/source/
            dictionaries/chinese_chars/source/
            dictionaries/chinese_words/source/
          key: ${{ runner.os }}-dictionary-files-${{ github.sha }}
          
      # Generate dictionary files with type-specific parameters
      - name: Generate dictionary files
        run: |
          # Debug: Check if the Chinese dictionary files exist
          echo "Checking if Chinese dictionary files exist..."
          ls -la dictionaries/chinese_chars/source/
          ls -la dictionaries/chinese_words/source/
          
          # Run the main program with the appropriate shard type
          echo "Running the main program for ${{ matrix.shard-type }}..."
          go run cmd/kiokun/main.go --writers 4 --mode ${{ matrix.shard-type }}
          
          # Verify output
          echo "Generated $(find output_${{ matrix.shard-type }} -type f | wc -l) files"
      
      # Push to the appropriate output repository
      - name: Push to output repository
        run: |
          # Navigate to output directory
          cd output_${{ matrix.shard-type }}
          
          # Initialize new git repo
          rm -rf .git
          git init
          
          # Configure Git
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          
          # Add the remote
          git remote add origin https://x-access-token:${{ secrets.DICTIONARY_DEPLOY_TOKEN }}@github.com/${{ env.OUTPUT_REPO }}.git
          
          # Add all files
          git add .
          
          # Create commit
          git commit -m "Update ${{ matrix.shard-type }} dictionary files"
          
          # Force push to completely replace contents
          git push -f origin master:main

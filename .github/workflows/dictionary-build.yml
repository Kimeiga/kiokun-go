name: Build Dictionary Coordinator

on:
  push:
    branches: [main]
  workflow_dispatch: # Manual trigger
  schedule:
    - cron: "0 0 1 * *" # Run monthly

jobs:
  prepare:
    runs-on: ubuntu-latest
    timeout-minutes: 30 # Add a timeout to prevent jobs from running indefinitely
    concurrency:
      group: ${{ github.workflow }}
      cancel-in-progress: true # Cancel in-progress jobs when a new one is triggered
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Download dictionary source files
        run: |
          # Create directories if they don't exist
          mkdir -p dictionaries/jmdict/source
          mkdir -p dictionaries/jmnedict/source

          # Download JMdict file with examples
          echo "Downloading JMdict file with examples..."
          curl -L -o dictionaries/jmdict/source/jmdict-examples-eng-3.6.1.json.zip https://github.com/scriptin/jmdict-simplified/releases/download/3.6.1+20250505122413/jmdict-examples-eng-3.6.1+20250505122413.json.zip

          # Unzip the JMdict file
          echo "Unzipping JMdict file..."
          unzip -o dictionaries/jmdict/source/jmdict-examples-eng-3.6.1.json.zip -d dictionaries/jmdict/source/

          # Download JMNedict file
          echo "Downloading JMNedict file..."
          curl -L -o dictionaries/jmnedict/source/jmnedict-all-3.6.1.json.zip https://github.com/scriptin/jmdict-simplified/releases/download/3.6.1+20250505122413/jmnedict-all-3.6.1+20250505122413.json.zip

          # Unzip the JMNedict file
          echo "Unzipping JMNedict file..."
          unzip -o dictionaries/jmnedict/source/jmnedict-all-3.6.1.json.zip -d dictionaries/jmnedict/source/

          # Verify files were downloaded
          ls -la dictionaries/jmdict/source/
          ls -la dictionaries/jmnedict/source/

          # Create Kanjidic directory if it doesn't exist
          mkdir -p dictionaries/kanjidic/source

          # Check if Kanjidic file exists
          if [ -f "dictionaries/kanjidic/source/kanjidic2-en-3.6.1.json" ]; then
            echo "Kanjidic file exists"
            ls -la dictionaries/kanjidic/source/
          else
            echo "Kanjidic file does not exist, downloading..."
            curl -L -o dictionaries/kanjidic/source/kanjidic2-en-3.6.1.json https://github.com/scriptin/jmdict-simplified/releases/download/3.6.1+20250505122413/kanjidic2-en-3.6.1+20250505122413.json
            ls -la dictionaries/kanjidic/source/
          fi

          # Download and convert Chinese character dictionary
          mkdir -p dictionaries/chinese_chars/source
          if [ -f "dictionaries/chinese_chars/source/dictionary_char_2024-06-17.json" ]; then
            echo "Chinese character dictionary file exists"
          else
            echo "Downloading Chinese character dictionary..."
            curl -L -o dictionaries/chinese_chars/source/dictionary_char_2024-06-17.jsonl https://data.dong-chinese.com/dump/dictionary_char_2024-06-17.jsonl

            echo "Converting Chinese character dictionary from JSONL to JSON..."
            go run cmd/jsonl2json/main.go -input=dictionaries/chinese_chars/source/dictionary_char_2024-06-17.jsonl -output=dictionaries/chinese_chars/source/dictionary_char_2024-06-17.json
          fi

          # Download and convert Chinese word dictionary
          mkdir -p dictionaries/chinese_words/source
          if [ -f "dictionaries/chinese_words/source/dictionary_word_2024-06-17.json" ]; then
            echo "Chinese word dictionary file exists"
          else
            echo "Downloading Chinese word dictionary..."
            curl -L -o dictionaries/chinese_words/source/dictionary_word_2024-06-17.jsonl https://data.dong-chinese.com/dump/dictionary_word_2024-06-17.jsonl

            echo "Converting Chinese word dictionary from JSONL to JSON..."
            go run cmd/jsonl2json/main.go -input=dictionaries/chinese_words/source/dictionary_word_2024-06-17.jsonl -output=dictionaries/chinese_words/source/dictionary_word_2024-06-17.json
          fi

          # Verify all files
          ls -la dictionaries/jmdict/source/
          ls -la dictionaries/jmnedict/source/
          ls -la dictionaries/kanjidic/source/
          ls -la dictionaries/chinese_chars/source/
          ls -la dictionaries/chinese_words/source/

      - name: Cache dictionary files
        uses: actions/cache@v3
        with:
          path: |
            dictionaries/jmdict/source/
            dictionaries/jmnedict/source/
            dictionaries/kanjidic/source/
            dictionaries/chinese_chars/source/
            dictionaries/chinese_words/source/
          key: ${{ runner.os }}-dictionary-files-${{ github.sha }}

  # Trigger the individual build workflows
  trigger-builds:
    needs: prepare
    runs-on: ubuntu-latest
    timeout-minutes: 10 # Add a timeout to prevent jobs from running indefinitely
    concurrency:
      group: ${{ github.workflow }}-trigger
      cancel-in-progress: true # Cancel in-progress jobs when a new one is triggered
    steps:
      - uses: actions/checkout@v3

      # Run builds sequentially to avoid resource contention
      - name: Trigger Non-Han Build (First)
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.DICTIONARY_DEPLOY_TOKEN }}
          event-type: build-non-han

      # Wait for Non-Han build to complete (approximately 30 minutes)
      - name: Wait for Non-Han Build to complete
        run: sleep 1800

      - name: Trigger Han-1Char Build (Second)
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.DICTIONARY_DEPLOY_TOKEN }}
          event-type: build-han-1char

      # Wait for Han-1Char build to complete (approximately 30 minutes)
      - name: Wait for Han-1Char Build to complete
        run: sleep 1800

      - name: Trigger Han-2Char Build (Third)
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.DICTIONARY_DEPLOY_TOKEN }}
          event-type: build-han-2char

      # Wait for Han-2Char build to complete (approximately 30 minutes)
      - name: Wait for Han-2Char Build to complete
        run: sleep 1800

      - name: Trigger Han-3Plus Build (Last)
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.DICTIONARY_DEPLOY_TOKEN }}
          event-type: build-han-3plus

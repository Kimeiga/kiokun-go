name: Build Han-1 Character Dictionary

on:
  repository_dispatch:
    types: [build-han-1char]
  workflow_dispatch: # Allow manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      OUTPUT_REPO: Kimeiga/japanese-dict-han-1char

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Download dictionary source files
        run: |
          # Create directories if they don't exist
          mkdir -p dictionaries/jmdict/source
          mkdir -p dictionaries/jmnedict/source

          # Download JMdict file with examples
          echo "Downloading JMdict file with examples..."
          curl -L -o dictionaries/jmdict/source/jmdict-examples-eng-3.6.1.json.zip https://github.com/scriptin/jmdict-simplified/releases/download/3.6.1+20250505122413/jmdict-examples-eng-3.6.1+20250505122413.json.zip

          # Unzip the JMdict file
          echo "Unzipping JMdict file..."
          unzip -o dictionaries/jmdict/source/jmdict-examples-eng-3.6.1.json.zip -d dictionaries/jmdict/source/

          # Download JMNedict file
          echo "Downloading JMNedict file..."
          curl -L -o dictionaries/jmnedict/source/jmnedict-all-3.6.1.json.zip https://github.com/scriptin/jmdict-simplified/releases/download/3.6.1+20250505122413/jmnedict-all-3.6.1+20250505122413.json.zip

          # Unzip the JMNedict file
          echo "Unzipping JMNedict file..."
          unzip -o dictionaries/jmnedict/source/jmnedict-all-3.6.1.json.zip -d dictionaries/jmnedict/source/

          # Verify files were downloaded
          ls -la dictionaries/jmdict/source/
          ls -la dictionaries/jmnedict/source/
          ls -la dictionaries/kanjidic/source/

          # Create Chinese dictionary directories if they don't exist
          mkdir -p dictionaries/chinese_chars/source
          mkdir -p dictionaries/chinese_words/source

          # Check if Chinese dictionary files exist
          if [ -f "dictionaries/chinese_chars/source/dictionary_char_2024-06-17.json" ]; then
            echo "Chinese character dictionary file exists"
          else
            echo "Chinese character dictionary file does not exist, creating empty file"
            echo "[]" > dictionaries/chinese_chars/source/dictionary_char_2024-06-17.json
          fi

          if [ -f "dictionaries/chinese_words/source/dictionary_word_2024-06-17.json" ]; then
            echo "Chinese word dictionary file exists"
          else
            echo "Chinese word dictionary file does not exist, creating empty file"
            echo "[]" > dictionaries/chinese_words/source/dictionary_word_2024-06-17.json
          fi

      - name: Generate Han 1-character dictionary files
        run: |
          # The new sharded processor generates all shards at once, but we only need the han-1char shard
          go run cmd/kiokun/main.go --writers 16 --silent
          echo "Generated $(find output_han_1char -type f | wc -l) files"

      - name: Setup Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Push to output repository
        run: |
          # Navigate to output directory
          cd output_han_1char

          # Initialize new git repo (removing any existing one)
          rm -rf .git
          git init

          # Add the remote
          git remote add origin https://x-access-token:${{ secrets.DICTIONARY_DEPLOY_TOKEN }}@github.com/${{ env.OUTPUT_REPO }}.git

          # Add files in batches to avoid "too many files" error
          echo "Adding files to git in batches..."
          find . -type f -name "*.json" | sort | split -l 10000 - batch_
          for batch in batch_*; do
            echo "Adding batch $batch..."
            xargs -a $batch git add
          done
          rm batch_*

          # Add remaining files (non-JSON)
          git add -A

          # Create commit
          git commit -m "Update Han 1-character dictionary files"

          # Force push to completely replace contents
          git push -f origin master:main
